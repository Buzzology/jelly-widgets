# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - master
  paths:
   include:
   - UserManagementInfrastructure
   - UserManagementWebApi
   - UserManagementIntegrationEvents
   - UserManagementGrpcService
   - UserManagementData
  

variables:
  containerRegistry: 'widgetsy6bsmxj7ail7y.azurecr.io'
  imageRepository: 'usermanagementwebapi'
  dockerfilePath: 'UserManagementWebApi/Dockerfile'
  dockerRegistryServiceConnection: 'Jelly Widgets Container Registry'
  tag: 'latest'
  vmImageName: 'ubuntu-latest'
  imagePullSecret: 'jellywidgetspullsecret' # https://docs.microsoft.com/en-us/azure/container-registry/container-registry-auth-kubernetes#use-the-image-pull-secret
  k8sNamespace: 'default'
  environment: 'JellyWidgets'

stages:
- stage: Build
  displayName: Build containers
  jobs:
  - job: UsermanagementAPI
    displayName: Build job
    pool:
      vmImage: $(vmImageName)
    steps:    
    
    - task: PowerShell@2
      displayName: List directory contents"
      inputs:
        targetType: 'inline'
        script: 'ls UserManagementWebApi/*'

    - task: Docker@2
      displayName: Build docker image
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: './'
        tags: |
          $(tag)
          
    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'manifests'
        path: 'UserManagementInfrastructure/manifests'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    pool:
      vmImage: $(vmImageName)
    environment: "$(environment).$(k8sNamespace)"
    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'manifests'
              downloadPath: '$(System.ArtifactsDirectory)/manifests'
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespace)
              manifests: |
                $(System.ArtifactsDirectory)/manifests/deployment.yml
                $(System.ArtifactsDirectory)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
#                widgetsbh5qtqj2ezp6m.azurecr.io/usermanagementwebapi:latest